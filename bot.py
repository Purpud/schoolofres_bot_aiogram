import logging
import os
from aiogram import Bot
from aiogram.dispatcher import Dispatcher
from aiogram.utils.executor import start_webhook
from aiogram import Bot, types

from config import TOKEN

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

HEROKU_APP_NAME = os.getenv('HEROKU_APP_NAME')

# webhook settings
WEBHOOK_HOST = f'https://{HEROKU_APP_NAME}.herokuapp.com'
WEBHOOK_PATH = f'/webhook/{TOKEN}'
WEBHOOK_URL = f'{WEBHOOK_HOST}{WEBHOOK_PATH}'

# webserver settings
WEBAPP_HOST = '0.0.0.0'
WEBAPP_PORT = os.getenv('PORT', default=8000)


async def on_startup(dispatcher):
    await bot.set_webhook(WEBHOOK_URL, drop_pending_updates=True)


async def on_shutdown(dispatcher):
    await bot.delete_webhook()


@dp.message_handler(commands=['start', 'help'])
async def welcome(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∏ üë§")
    item2 = types.KeyboardButton("–Ü–Ω—Ñ–æ –ø—Ä–æ –ø—Ä–æ—î–∫—Ç ‚Ñπ")
    item3 = types.KeyboardButton("–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è ‚úç")
    item4 = types.KeyboardButton("–ó–∞–¥–∞—Ç–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è ‚ùì")
    markup.add(item1, item2)
    markup.add(item3)

    await bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç, <b>{0.first_name}</b>!\n–•–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ –ø—Ä–æ –ª–æ–∫–∞–ª—å–Ω—É —à–∫–æ–ª—É —É—Å–ø—ñ—Ö—É –≤ –ö–∏—î–≤—ñ?\n–í–∏–±–∏—Ä–∞–π –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ üëá".format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)


@dp.message_handler()
async def echo(message: types.Message):
    await message.answer(message.text)


@dp.message_handler(content_types=['text'])
async def answer_reply(message: types.Message):
    if message.chat.type == 'private':
        if message.text == '–û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∏ üë§':
            # Julia Popadina
            await bot.send_photo(message.chat.id, photo=open(
                'assets/participants_compressed/Julia.jpg', 'rb'), caption="‚≠ê *–Æ–ª—ñ—è –ü–æ–ø–∞–¥—ñ–Ω–∞* ‚≠ê", parse_mode='markdown')
            await bot.send_message(message.chat.id, (
                "–Ø *–Æ–ª—è*, —É –∫–≤—ñ—Ç–Ω—ñ —Å–≤—è—Ç–∫—É–≤–∞—Ç–∏–º—É 17-–∏–π –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è, –ª—é–±–ª—é –∫–æ—Ç—ñ–≤ —ñ —Ç–≤–æ—Ä—á—ñ—Å—Ç—å –ñ–∞–¥–∞–Ω–∞. –û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∫–∞ –ø—Ä–æ—î–∫—Ç—É \"School of Resilience Kyiv\"\n"
                "–¶—å–æ–≥–æ —Ä–æ–∫—É —Å—Ç–∞–ª–∞ –≤–∏–ø—É—Å–∫–Ω–∏—Ü–µ—é –ø—Ä–æ—î–∫—Ç—É \"School of Resilience\", —â–æ –ø–æ–¥–∞—Ä—É–≤–∞–≤ 10 –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∏—Ö –¥–Ω—ñ–≤ —É —Å–æ–Ω—è—á–Ω–æ–º—É –º—ñ—Å—Ç—ñ –ì–∞–π–¥–µ–ª—å–±–µ—Ä–≥.\n"
                "–ù–µ—Ç–≤–æ—Ä–∫—ñ–Ω–≥, —è–∫–∏–π –º–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –Ω–∞ –ø—Ä–æ—î–∫—Ç—ñ, –∞ —Ç–∞–∫–æ–∂ –Ω–∞–≤–∏—á–∫–∏ —ñ –∑–Ω–∞–Ω–Ω—è, –±–µ–∑ —è–∫–∏—Ö –Ω—É –ø—Ä–æ—Å—Ç–æ –Ω—ñ—è–∫ —É –º—ñ–Ω–ª–∏–≤–æ–º—É —Å—É—á–∞—Å–Ω–æ–º—É —Å–≤—ñ—Ç—ñ, –±—É–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–µ–æ—Ü—ñ–Ω–µ–Ω–Ω–∏–º–∏! "), parse_mode='markdown')

            # Denis Budnichenko
            await bot.send_photo(message.chat.id, photo=open('assets/participants_compressed/Den.jpg',
                                                             'rb'), caption="‚≠ê *–î–µ–Ω–∏—Å –ë—É–¥–Ω–∏—á–µ–Ω–∫–æ* ‚≠ê", parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ü—Ä–∏–≤—ñ—Ç, —è *–î–µ–Ω–∏—Å*, –≤–∏–ø—É—Å–∫–Ω–∏–∫ –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience\" —Ç–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience Kyiv\" "), parse_mode='markdown')

            # Kamila Shaga
            await bot.send_photo(message.chat.id, photo=open(
                'assets/participants_compressed/Kamila.jpg', 'rb'), caption="‚≠ê *–ö–∞–º—ñ–ª–∞ –®–∞–≥–∞* ‚≠ê", parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ü—Ä–∏–≤—ñ—Ç, —è *–ö–∞–º—ñ–ª–∞*, –≤–∏–ø—É—Å–∫–Ω–∏—Ü—è –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience\" —Ç–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∫–∞ –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience Kyiv\" "), parse_mode='markdown')

            # Margo Vovchek
            await bot.send_photo(message.chat.id, photo=open('assets/participants_compressed/Margo.jpg',
                                                             'rb'), caption="‚≠ê *–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –í–æ–≤—á–µ–∫* ‚≠ê", parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ü—Ä–∏–≤—ñ—Ç, —è *–ú–∞—Ä–≥–æ*, –≤–∏–ø—É—Å–∫–Ω–∏—Ü—è –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience\" —Ç–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∫–∞ –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience Kyiv\" "), parse_mode='markdown')

            # Max Pinchuk
            await bot.send_photo(message.chat.id, photo=open(
                'assets/participants_compressed/Max.jpg', 'rb'), caption="‚≠ê *–ú–∞–∫—Å–∏–º –ü—ñ–Ω—á—É–∫* ‚≠ê", parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ü—Ä–∏–≤—ñ—Ç, —è *–ú–∞–∫—Å*, –≤–∏–ø—É—Å–∫–Ω–∏–∫ –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience\" —Ç–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience Kyiv\" "), parse_mode='markdown')

            # Nazar Slabliuk
            await bot.send_photo(message.chat.id, photo=open(
                'assets/participants_compressed/Nazar.jpg', 'rb'), caption="‚≠ê *–ù–∞–∑–∞—Ä –°–ª–∞–±–ª—é–∫* ‚≠ê", parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ü—Ä–∏–≤—ñ—Ç, —è *–ù–∞–∑–∞—Ä*, –≤–∏–ø—É—Å–∫–Ω–∏–∫ –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience\" —Ç–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience Kyiv\" "), parse_mode='markdown')

            # Sonia Kuchinska
            await bot.send_photo(message.chat.id, photo=open('assets/participants_compressed/Sonia.jpg',
                                                             'rb'), caption="‚≠ê *–°–æ—Ñ—ñ—è –ö—É—á–∏–Ω—Å—å–∫–∞* ‚≠ê", parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ü—Ä–∏–≤—ñ—Ç, —è *–°–æ–Ω—è*, –≤–∏–ø—É—Å–∫–Ω–∏—Ü—è –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience\" —Ç–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∫–∞ –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience Kyiv\" "), parse_mode='markdown')

            # Eugene Kravchuk
            await bot.send_photo(message.chat.id, photo=open('assets/participants_compressed/Eugene.jpg',
                                                             'rb'), caption="‚≠ê *–Ñ–≤–≥–µ–Ω—ñ–π –ö—Ä–∞–≤—á—É–∫* ‚≠ê", parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ü—Ä–∏–≤—ñ—Ç, —è *–ñ–µ–Ω—è*, –≤–∏–ø—É—Å–∫–Ω–∏–∫ –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience\" —Ç–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä –ø—Ä–æ—î–∫—Ç—É \"Shool of Resilience Kyiv\""), parse_mode='markdown')
        elif message.text == '–Ü–Ω—Ñ–æ –ø—Ä–æ –ø—Ä–æ—î–∫—Ç ‚Ñπ':
            await bot.send_message(message.chat.id, ("*–ù–∞ –ø—Ä–æ—î–∫—Ç—ñ —Ç–∏ –¥—ñ–∑–Ω–∞—î—à—Å—è:*\n\n"
                                                     "‚Ä¢ –Ø–∫ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –≥—Ä–∞–Ω—Ç–æ–≤—É –∑–∞—è–≤–∫—É —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ñ—ñ–Ω–∞–Ω—Å—É–≤–∞–Ω–Ω—è –Ω–∞ —Å–≤–æ—ó –Ω–∞–π–Ω–µ–π–º–æ–≤—ñ—Ä–Ω—ñ—à—ñ —ñ–¥–µ—ó? üí°\n"
                                                     "‚Ä¢ –Ø–∫ –∑–∞—Ö–æ–ø–∏—Ç–∏ —É–≤–∞–≥—É –∞—É–¥–∏—Ç–æ—Ä—ñ—ó, –ø–æ–±–æ—Ä–æ—Ç–∏ —Å—Ç—Ä–∞—Ö —ñ —Å—Ç–∞—Ç–∏ –º–∞–π—Å—Ç—Ä–æ–º –ø—É–±–ª—ñ—á–Ω–∏—Ö –≤–∏—Å—Ç—É–ø—ñ–≤? üí¨\n"
                                                     "‚Ä¢ –Ø–∫ —Ä–æ–∑–≤–∏–Ω—É—Ç–∏ –æ—Å–æ–±–∏—Å—Ç–∏–π –±—Ä–µ–Ω–¥ —â–æ–± –∑–∞–ª–∏—à–∞—Ç–∏ –Ω–µ–∑–∞–±—É—Ç–Ω—î –≤—Ä–∞–∂–µ–Ω–Ω—è —Å–∫—Ä—ñ–∑—å, –¥–µ –≤–∞—Å –ø–æ–±–∞—á–∞—Ç—å? üéØ\n\n"), parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ú–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ –±–∞–≥–∞—Ç—å–æ—Ö —Ü—ñ–∫–∞–≤–ª—è—Ç—å —Ü—ñ –ø–∏—Ç–∞–Ω–Ω—è, —ñ –≥–∞—Ä–∞–Ω—Ç—É—î–º–æ: —à–∫–æ–ª–∞ —Å—Ç—ñ–π–∫–æ—Å—Ç—ñ - —Ü–µ –º—ñ—Å—Ü–µ –¥–µ –≤–∏ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∫–æ–∂–Ω–µ —ñ–∑ –Ω–∏—Ö! üòÉ\n\n"), parse_mode='markdown')
            await bot.send_message(message.chat.id, ("–ù–∞—Ç—Ö–Ω–µ–Ω–Ω—ñ –≤–ª–∞—Å–Ω–∏–º –¥–æ—Å–≤—ñ–¥–æ–º, –º–∏ –ø—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –¥–æ —Ä–æ–∑—Ä–æ–±–∫–∏ –ø—Ä–æ—î–∫—Ç—É *\"School of Resilience Kyiv\"*, —Å—Ç–∞—Ç–∏ —É—á–∞—Å–Ω–∏–∫–æ–º —è–∫–æ–≥–æ –≤–∂–µ —Ü—ñ—î—ó –≤–µ—Å–Ω–∏, –º–æ–∂–µ—à —Å—Ç–∞—Ç–∏ —Å–∞–º–µ –¢–ò! ü´µ\n\n"), parse_mode='markdown')
            await bot.send_message(
                message.chat.id, ("–ë—É–¥—å—Ç–µ –ø–µ–≤–Ω—ñ, –º–∏ –∑ –∫–æ–º–∞–Ω–¥–æ—é –ø—ñ–¥–≥–æ—Ç—É–≤–∞–ª–∏ –¥–µ—â–æ –¥—ñ–π—Å–Ω–æ –∫—Ä—É—Ç–µ–∑–Ω–µ! üòé"), parse_mode='markdown')
            await bot.send_message(message.chat.id, ("–©–æ–± –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è –ø–µ—Ä–µ—Ö–æ–¥—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º: <b><a href=\"https://docs.google.com/forms/d/e/1FAIpQLScTNtP9jxucN2n4RMWowc97i41DA16ibRbQp7KIGCF6uAmQVw/viewform\">—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</a></b>"), parse_mode='html')
        elif message.text == '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è ‚úç':
            await bot.send_message(message.chat.id, "–©–æ–± –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è –ø–µ—Ä–µ—Ö–æ–¥—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º: <b><a href=\"https://docs.google.com/forms/d/e/1FAIpQLScTNtP9jxucN2n4RMWowc97i41DA16ibRbQp7KIGCF6uAmQVw/viewform\">—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</a></b>", parse_mode="html")
        else:
            await bot.send_message(message.chat.id, "–Ø –Ω–µ –∑–Ω–∞—é, —â–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏")


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    start_webhook(
        dispatcher=dp,
        webhook_path=WEBHOOK_PATH,
        skip_updates=True,
        on_startup=on_startup,
        on_shutdown=on_shutdown,
        host=WEBAPP_HOST,
        port=WEBAPP_PORT,
    )
